enum GenderType {
  Male
  Female
  Other
}

enum VerificationStatus {
  pending
  approved
  rejected
}

enum StatusType {
  active
  inactive
}

model User {
  id            Int @id @default (autoincrement())
  first_name    String @db.VarChar(50)
  last_name     String @db.VarChar(50)
  dob           DateTime @db.Date
  gender        GenderType
  mobile_number String @unique @db.VarChar(15)
  email         String @unique @db.VarChar(100)
  username      String @unique @db.VarChar(50)
  user_status   String @db.VarChar(20)
  is_verified   VerificationStatus @default (pending)
  created_at    DateTime @default (now()) @db.Timestamp(6)
  updated_at    DateTime @default (now()) @db.Timestamp(6)
  fcm_token     String ? @db.VarChar(255)
  user_roles    UserRoles[]
  user_activity UserActivity[]
  user_modules  UserModules[]
  @@schema("uam")
}

model Roles {
  id            Int @id @default (autoincrement())
  name          String @unique @db.VarChar(100)
  status        StatusType ? @default (active)
  created_at    DateTime ? @default (now()) @db.Timestamp(6)
  updated_at    DateTime ? @default (now()) @db.Timestamp(6)
  description   String ? @db.VarChar(100)
  user_roles    UserRoles[]
  @@schema("uam")
}

model Activity {
  id            Int @id @default (autoincrement())
  name          String @unique @db.VarChar(100)
  status        StatusType ? @default (active)
  created_at    DateTime ? @default (now()) @db.Timestamp(6)
  updated_at    DateTime ? @default (now()) @db.Timestamp(6)
  description   String ? @db.VarChar(100)
  user_activity UserActivity[]
  @@schema("uam")
}

model Modules {
  id            Int @id @default (autoincrement())
  name          String @unique @db.VarChar(100)
  status        StatusType ? @default (active)
  created_at    DateTime ? @default (now()) @db.Timestamp(6)
  updated_at    DateTime ? @default (now()) @db.Timestamp(6)
  description   String ? @db.VarChar(100)
  user_modules  UserModules[]
  @@schema("uam")
}

model UserRoles {
  user_id       Int
  role_id       Int
  created_at    DateTime @default (now()) @db.Timestamp(6)
  updated_at    DateTime @default (now()) @db.Timestamp(6)
  user          User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  role          Roles @relation(fields: [role_id], references: [id], onDelete: Cascade)
  @@id([user_id, role_id])
  @@schema("uam")
}

model UserActivity {
  user_id       Int
  activity_id   Int
  created_at    DateTime @default (now()) @db.Timestamp(6)
  updated_at    DateTime @default (now()) @db.Timestamp(6)
  user          User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  activity      Activity @relation(fields: [activity_id], references: [id], onDelete: Cascade)
  @@id([user_id, activity_id])
  @@schema("uam")
}

model UserModules {
  user_id       Int
  module_id     Int
  created_at    DateTime @default (now()) @db.Timestamp(6)
  updated_at    DateTime @default (now()) @db.Timestamp(6)
  user          User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  module Modules           @relation(fields: [module_id], references: [id], onDelete: Cascade)
  @@id([user_id, module_id])
  @@schema("uam")
}

model DeletedUser {
  id            Int @id @default (autoincrement())
  first_name    String @db.VarChar(50)
  last_name     String @db.VarChar(50)
  dob           DateTime @db.Date
  gender        GenderType
  mobile_number String @unique @db.VarChar(15)
  email         String @unique @db.VarChar(100)
  username      String @unique @db.VarChar(50)
  user_status   String @db.VarChar(20)
  is_verified   VerificationStatus @default (pending)
  created_at    DateTime @default (now()) @db.Timestamp(6)
  updated_at    DateTime @default (now()) @db.Timestamp(6)
  deleted_at    DateTime @default (now()) @db.Timestamp(6)
  fcm_token     String ? @db.VarChar(255)
  @@schema("uam")
}